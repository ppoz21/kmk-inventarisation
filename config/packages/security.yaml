security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppAuthenticator
            logout:
                path: app_logout
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                remember_me_parameter: _remember_me

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: /zaloguj, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: /nie-pamietam-hasla, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: /resetuj-haslo/.*, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/modele/dodaj-model, roles: [ROLE_ADMIN, ROLE_MIKOL] }
        - { path: ^/czlonkowie-klubu, roles: [ROLE_ADMIN, ROLE_NADZOR] }
        - { path: ^/do-zrobienia/.*, roles: [ROLE_ADMIN]}
        - { path: ^/administracja, roles: [ROLE_ADMIN]}
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
